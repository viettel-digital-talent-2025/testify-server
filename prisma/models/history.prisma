model RunHistory {
    id         String           @id @default(cuid())
    scenarioId String
    scenario   Scenario         @relation(fields: [scenarioId], references: [id], onDelete: Cascade)
    runAt      DateTime?
    endAt      DateTime?
    avgLatency Float            @default(0)
    p95Latency Float            @default(0)
    throughput Float            @default(0)
    errorRate  Float            @default(0)
    progress   Float            @default(0)
    status     RunHistoryStatus @default(SUCCESS)
    createdAt  DateTime         @default(now())
    updatedAt  DateTime         @updatedAt

    runHistoryMetrics RunHistoryMetrics[]
    bottlenecks       Bottleneck[]
}

model RunHistoryMetrics {
    id           String           @id @default(cuid())
    runHistoryId String
    runHistory   RunHistory       @relation(fields: [runHistoryId], references: [id], onDelete: Cascade)
    flowId       String
    flow         ScenarioFlow     @relation(fields: [flowId], references: [id], onDelete: Cascade)
    stepId       String
    step         ScenarioFlowStep @relation(fields: [stepId], references: [id], onDelete: Cascade)
    avgLatency   Float            @default(0)
    p95Latency   Float            @default(0)
    throughput   Float            @default(0)
    errorRate    Float            @default(0)
    createdAt    DateTime         @default(now())
    updatedAt    DateTime         @updatedAt
}

enum RunHistoryStatus {
    RUNNING
    SUCCESS
    FAILED
    ABORTED
}
